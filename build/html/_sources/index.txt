.. Game Development with Python master file, created by
   sphinx-quickstart on Wed May 30 21:12:53 2018.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Welcome to Game Development with Python!
=============================================================================

Contents:

.. toctree::
   :maxdepth: 2


Getting Started
===============================

Overview of Python
Configuring the IDE

Lesson One
-------------
Using the IDE to write hello world

Introduction to Types
================================
Strings, Integers, Floats

Calculate days, minutes, seconds since you were born.
Get input from the user. Convert to the correct type.

Lesson Two
-----------
Calculate change in dollars, quarters, dimes, nickels, and pennies.

Then use the datatime module to compute the days since you were born.



Introduction to Loops and Collections
=======================================
Lists, Sets, Dictionaries

Use the random module to put some values in each of these types of collections.
Read words from a file. Add them to a list if they are not in a stop set.
Use datetime to keep track of how fast an item can be looked up.

Lesson Three
--------------
Create a word jumble by mixing up letters of words.

Use a dictionary to keep track of the words. Count the correct answers.  Keep a list of the incorrect answers. Keep track of time to see how fast they find the
answer.





Writing and Calling Functions
==============================

Writing Classes, Making Objects, Calling Methods
=================================================

Code Re-use with Inheritance
===============================

End of session one.

Introduction to Animation
===========================

Frames and Double Buffering

How does PyGame do it?

Translation, Rotation, and Scaling
====================================
Always relative to origin.

How does PyGame do it?

Building a Video Game
======================
Missile Command? Angry Birds?

End of session two.

Composite Shapes
=================
Animating.

Detecting Collisions
====================

End of Session 2.

Games of Perfect Information
============================
Tic Tac Toe

Minimax

Connect Four

Machine Learning Opponents
============================
Building an AlphaZero opponent for Connect Four.



Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
